services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    env_file:
      - .env
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT_INTERNAL}

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT_INTERNAL}

  postgres:
    image: postgres:17.2-bookworm
    env_file:
      - .env
    command: postgres -c log_statement=all
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: ${DB_HEALTH_CHECK_INTERVAL}
      timeout: ${DB_HEALTH_CHECK_TIMEOUT}
    volumes:
      - ./database/postgres/:/docker-entrypoint-initdb.d/

  mongodb:
    image: mongo:8.0.4
    env_file:
      - .env
    healthcheck:
      test: mongosh --eval 'db.runCommand("ping").ok' --quiet
      interval: ${DB_HEALTH_CHECK_INTERVAL}
      timeout: ${DB_HEALTH_CHECK_TIMEOUT}
    volumes:
      - ./database/mongodb/:/docker-entrypoint-initdb.d/
